const dynamicUrls = ['./index.html', './nl/searchindex.js', './nl/search.html', './nl/genindex.html', './nl/index.html', './nl/_sphinx_design_static/design-tabs.js', './nl/_sphinx_design_static/sphinx-design.min.css', './nl/docs/what_if/what_if.html', './nl/docs/loops_functions/loops_functions.html', './nl/docs/parts/parts.html', './nl/docs/line_sensor/line_sensor.html', './nl/docs/assemble/assemble.html', './nl/docs/drive/drive.html', './nl/docs/teacher_setup/teacher_setup.html', './nl/docs/follow_line_1_sensor/follow_line_1_sensor.html', './nl/docs/wakeup/wakeup.html', './en/searchindex.js', './en/search.html', './en/genindex.html', './en/index.html', './en/_sphinx_design_static/design-tabs.js', './en/_sphinx_design_static/sphinx-design.min.css', './en/_static/documentation_options.js', './en/_static/design-tabs.js', './en/_static/basic.css', './en/_static/sphinx_highlight.js', './en/_static/searchtools.js', './en/_static/doctools.js', './en/_static/minus.png', './en/_static/pygments.css', './en/_static/file.png', './en/_static/plus.png', './en/_static/sphinx-design.min.css', './en/_static/language_data.js', './en/_static/sbt-webpack-macros.html', './en/_static/webpack-macros.html', './en/_static/styles/pydata-sphinx-theme.css', './en/_static/styles/bootstrap.css', './en/_static/styles/theme.css', './en/_static/styles/sphinx-book-theme.css', './en/_static/scripts/sphinx-book-theme.js', './en/_static/scripts/bootstrap.js', './en/_static/scripts/pydata-sphinx-theme.js', './en/_static/icons/mirte-icon-512.png', './en/_static/icons/mirte-icon-192.png', './en/_static/media/mirte_drive.mp4', './en/_static/media/mirte_stop_at_line.mp4', './en/_static/media/line_follow.mp4', './en/_static/media/mirte_wifi_blinking.mp4', './en/_static/css/custom.css', './en/_static/js/custom.js', './en/_static/images/logo_binder.svg', './en/_static/images/logo_deepnote.svg', './en/_static/images/logo_jupyterhub.svg', './en/_static/images/logo_colab.png', './en/_static/vendor/fontawesome/6.5.2/css/all.min.css', './en/_static/vendor/fontawesome/6.5.2/webfonts/fa-v4compatibility.woff2', './en/_static/vendor/fontawesome/6.5.2/webfonts/fa-solid-900.woff2', './en/_static/vendor/fontawesome/6.5.2/webfonts/fa-brands-400.woff2', './en/_static/vendor/fontawesome/6.5.2/webfonts/fa-regular-400.woff2', './en/_static/vendor/fontawesome/6.5.2/js/all.min.js', './en/docs/what_if/what_if.html', './en/docs/loops_functions/loops_functions.html', './en/docs/parts/parts.html', './en/docs/line_sensor/line_sensor.html', './en/docs/assemble/assemble.html', './en/docs/drive/drive.html', './en/docs/teacher_setup/teacher_setup.html', './en/docs/follow_line_1_sensor/follow_line_1_sensor.html', './en/docs/wakeup/wakeup.html', './en/_images/11_step0.png', './en/_images/2_step0.png', './en/_images/9_step2.png', './en/_images/4_step3.png', './en/_images/undo_button.png', './en/_images/1_step0.png', './en/_images/shutdown.png', './en/_images/drive_seconds.png', './en/_images/step_button.png', './en/_images/11_step2.png', './en/_images/8_step1.png', './en/_images/usb_cable.png', './en/_images/4_step2.png', './en/_images/7_part0.png', './en/_images/drive_square_function.png', './en/_images/wifi_chromebook.png', './en/_images/13_step2.png', './en/_images/motor_blockly.png', './en/_images/motor_python.png', './en/_images/8_part1.png', './en/_images/8_part0.png', './en/_images/sensors_tab.png', './en/_images/line_sensor_python.png', './en/_images/14_step0.png', './en/_images/drive_speed_settings.png', './en/_images/10_part0.png', './en/_images/new_tab.png', './en/_images/3_step3.png', './en/_images/mirte_home.png', './en/_images/individual_motor_control.png', './en/_images/13_step0.png', './en/_images/9_part0.png', './en/_images/7_step0.png', './en/_images/15_part0.png', './en/_images/0_part0.png', './en/_images/1_step3.png', './en/_images/15_step0.png', './en/_images/16_part0.png', './en/_images/0_step1.png', './en/_images/drive_square_loop.png', './en/_images/2_step1.png', './en/_images/6_part0.png', './en/_images/stop_button.png', './en/_images/shutdown_message.png', './en/_images/15_step1.png', './en/_images/10_step1.png', './en/_images/mirte_drive.mp4', './en/_images/4_step5.png', './en/_images/mirte_stop_at_line.mp4', './en/_images/wifi_windows.png', './en/_images/5_part0.png', './en/_images/6_step0.png', './en/_images/7_step2.png', './en/_images/6_step1.png', './en/_images/line_follow.mp4', './en/_images/6_step2.png', './en/_images/12_step0.png', './en/_images/12_step1.png', './en/_images/pause_button.png', './en/_images/2_part0.png', './en/_images/stop_line_python.png', './en/_images/13_step1.png', './en/_images/drive_square.png', './en/_images/9_step1.png', './en/_images/14_part0.png', './en/_images/mirte_line_1_sensor_theory.png', './en/_images/4_step1.png', './en/_images/debug_blockly.png', './en/_images/7_step3.png', './en/_images/3_step2.png', './en/_images/4_part0.png', './en/_images/0_step0.png', './en/_images/2_step2.png', './en/_images/5_step0.png', './en/_images/10_times_sleep.png', './en/_images/stop_line_blockly.png', './en/_images/windows_discovery.png', './en/_images/3_step1.png', './en/_images/jst_4_pin.png', './en/_images/8_step0.png', './en/_images/10_times.png', './en/_images/play_button.png', './en/_images/1_step2.png', './en/_images/11_step3.png', './en/_images/0_part1.png', './en/_images/line_sensor_blockly.png', './en/_images/line_sensor_theory.png', './en/_images/drive_control.png', './en/_images/9_step0.png', './en/_images/4_step4.png', './en/_images/debug_python.png', './en/_images/3_step0.png', './en/_images/11_step1.png', './en/_images/12_part0.png', './en/_images/1_step1.png', './en/_images/13_part0.png', './en/_images/while_true.png', './en/_images/detect_line.png', './en/_images/14_step1.png', './en/_images/mirte_wifi_blinking.mp4', './en/_images/5_step1.png', './en/_images/0_step2.png', './en/_images/10_step0.png', './en/_images/7_step1.png', './en/_images/bin.png', './en/_images/4_step0.png'];
let urlsToCache = ['./', './en/', './nl/', './sw.js'].concat(dynamicUrls);
const CACHE_NAME = `temperature-converter-v7`;

self.addEventListener('install', event => {
  console.log("installing");
  event.waitUntil(
    caches.open(CACHE_NAME).then(cache => cache.addAll(urlsToCache))
  );
});

self.addEventListener('fetch', event => {
  event.respondWith((async () => {
    const cache = await caches.open(CACHE_NAME);
    console.log(event.request);

    // Get the resource from the cache.
    const cachedResponse = await cache.match(event.request, { ignoreSearch: true });
    if (cachedResponse) {
      return cachedResponse;
    } else {
        try {
          // If the resource was not in the cache, try the network.
          const fetchResponse = await fetch(event.request);

          // Save the resource in the cache and return it.
          cache.put(event.request, fetchResponse.clone());
          return fetchResponse;
        } catch (e) {
          // The network failed.
        }
    }
  })());
});
